from datetime import datetime
import os;
from dotenv import load_dotenv;

load_dotenv()
import re
from mistralai import Mistral
import ast

api_key = os.environ["MISTRAL_API_KEY"]
model = "mistral-medium-latest"  # "mistral-large-latest"
client_mistral = Mistral(api_key=api_key)


def refine(date: str ) -> str:
    date = '2025-' + date[5:10]
    print(f"date before refine {date}")
    try:
        date = datetime.strptime(date, "%Y-%m-%d").date()
    except:
        date = datetime.now()
    print(f"date after refine {date}")
    return str(date)


def find_date_for_danceparty(text: str):
    # data = '2018-02-13'
    content = 'look for the event date in the Ukrainian text below. You must  convert this event date to format YYYY-MM-DD. If you put redundant information - I will KILL you, fucking bot. I need ONLY pure result, without explanation: ' + text  # , –ø—Ä–∏–≤–µ–¥–∏ —Ü—é –¥–∞—Ç—É, —É –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤–∫–∞–∂–∏ –≤–∏–∫–ª—é—á–Ω–æ –¥–∞—Ç—É —ñ –Ω—ñ—á–æ–≥–æ –∑–∞–π–≤–æ–≥–æ
    response = client_mistral.chat.complete(
        messages=[
            {
                "role": "user",
                "content": content,
            }
        ],
        model=model,
        # temperature=0.5,
        # max_tokens=6,
        # top_p=1
    )
    date = response.choices[0].message.content[:12]
    return refine(date)


def create_brief_for_event(text: str) -> str:
    content = """
    –∑—Ä–æ–±–∏ —Ä–µ–∑—é–º–µ –∑ –æ–ø–∏—Å—É –æ—Ñ–ª–∞–π–Ω-–ø–æ–¥—ñ—ó –æ–¥–∏–Ω –ø–∞—Ä–∞–≥—Ä–∞—Ñ.
    —Ä–µ–∑—é–º–µ –º–∞—î –±—É—Ç–∏ –Ω–∞–ø–∏—Å–∞–Ω–æ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é.
    –ê–¥–∞–ø—Ç—É–π —Ç–µ–∫—Å—Ç –¥–ª—è –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó –≤ telegram. 
    –£ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤–∫–ª—é—á–∏ –ª–∏—à–µ —Ñ–∞–∫—Ç–∏—á–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é,
    –ø—Ä–∏–±–µ—Ä–∏ –∑ —Ç–µ–∫—Å—Ç—É –ø–æ—Å–∏–ª–∞–Ω–Ω—è, —è–∫—â–æ –≤–æ–Ω–∏ —Ç–∞–º —î,
    —Ç–µ–∫—Å—Ç –º–∞—î –±—É—Ç–∏ –≤ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ-–¥—ñ–ª–æ–≤–æ–º—É —Å—Ç–∏–ª—ñ, 
    –ø—Ä–∏–±–µ—Ä–∏ –∑ —Ç–µ–∫—Å—Ç—É –µ–º–æ—Ü—ñ–π–Ω—ñ –æ–ø–∏—Å–∏ : 
    """ + text
    response = client_mistral.chat.complete(
        messages=[
            {
                "role": "user",
                "content": content,
            }
        ],
        model=model,
        # max_tokens=64,
        # top_p=1
    )
    return response.choices[0].message.content

def calculate_event_possibility(text: str)->int:
    content = '–ø–µ—Ä–µ–≥–ª—è–Ω—å –ø—É–±–ª—ñ–∫–∞—Ü—ñ—é —ñ —Ä–æ–∑—Ä–∞—Ö—É–π —á–∏—Å–ª–æ–≤—É –≤—ñ—Ä–æ–≥—ñ–¥–Ω—ñ—Å—Ç—å —Ç–æ–≥–æ, —â–æ —Ü—è –ø—É–±–ª—ñ–∫–∞—Ü—ñ—è —î –∞–Ω–æ–Ω—Å–æ–º –æ—Ñ–ª–∞–π–Ω –ø–æ–¥—ñ—ó. –≤—ñ—Ä–æ–≥—ñ–¥–Ω—ñ—Å—Ç—å –º–∞—î –±—É—Ç–∏ –≤–∏—Ä–∞–∂–µ–Ω–∞ –≤—ñ–¥ 0 –¥–æ 100. –≤–∫–ª—é—á–∏ —É –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤–∏–∫–ª—é—á–Ω–æ —á–∏—Å–ª–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è, —É –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–µ —Ç—Ä–µ–±–∞ —Ç–µ–∫—Å—Ç—É, –ª–∏—à–µ —á–∏—Å–ª–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è :'+text

    try:
        response = client_mistral.chat.complete(
            model=model,
            messages=[
                {
                    "role": "user",
                    "content": "–ù–∏–∂—á–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–π —Ç–µ–∫—Å—Ç. –í–∏–∑–Ω–∞—á –≤—ñ—Ä–æ–≥—ñ–¥–Ω—ñ—Å—Ç—å —Ç–æ–≥–æ, —â–æ —Ü–µ–π —Ç–µ–∫—Å—Ç —î –∞–Ω–æ–Ω—Å–æ–º –æ—Ñ–ª–∞–π–Ω-–ø–æ–¥—ñ—ó. –†–µ–∑—É–ª—å—Ç–∞—Ç –º–∞—î –±—É—Ç–∏ –≤ –¥—ñ–∞–ø–∞–∑–æ–Ω—ñ –≤—ñ–¥ 0 –¥–æ 100. –ù–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–æ—è—Å–Ω–µ–Ω—å, –ª–∏—à–µ —á–∏—Å–ª–æ: " + content,
                },
            ]
        )
    except Exception as e:
        return -1

    rez = response.choices[0].message.content[:3]
    print(f'calculated possibility {rez}')

    num = ""
    for char in rez:
        if char.isdigit():
            num += char
        else:
            break
    return int(num) if num else -1

if __name__=='__main__':
    text = """
    One love - —Ç–æ —Ç—Ä–∏ –∑–∞–ª–∏ –Ω–∞ 600 –º2, –≤ —Ü—é –Ω–µ–¥—ñ–ª—é —Ç–∞–Ω—Ü—é—î–º–æ –≤ Nivki Hall

    üëâ 3 –≤–µ–ª–∏–∫–∏—Ö –∑–∞–ª–∏ –Ω–∞ –∫–æ–∂–µ–Ω —Å—Ç–∏–ª—å:
    ‚Ä¢ –ë–ê–ß–ê–¢–ê
    üéß –∫–∞—á–∞—î Dj Raul
        ‚Ä¢ –°–ê–õ–¨–°–ê Cuban
        üéß –∑–∞–ø–∞–ª—é—î Dj  Sanchez
        ‚Ä¢ –ó–£–ö
        üéß –∑–∞ –ø—É–ª—å—Ç–æ–º Dj Yan
    
    üìÜ –ö–æ–ª–∏: 18.02 (–Ω–µ–¥—ñ–ª—è) 19:00-22:00
    üìç –î–µ: Nivki Hall, –ø—Ä–æ—Å–ø–µ–∫—Ç –ë–µ—Ä–µ—Å—Ç–µ–π—Å—å–∫–∏–π, 84
    
    üí∞–í—Ö—ñ–¥: 200–≥—Ä–Ω
    
    –í—Ä–∏–≤–∞—î–º–æ—Å—è –≤ —Ü–µ–π –≤–µ—á—ñ—Ä üòç
    """
    p = calculate_event_possibility(text)
    print(f" possibility {p}")

